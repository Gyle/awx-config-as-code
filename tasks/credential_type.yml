- name: Create {{ CRENDENTIAL_TYPE_GET_TRANSACTIONS }} Credential Type
  awx.awx.credential_type:
    name: "{{ CRENDENTIAL_TYPE_GET_TRANSACTIONS }}"
    description: Credential type for {{ CRENDENTIAL_TYPE_GET_TRANSACTIONS }}
    kind: cloud
    inputs: 
      fields:
        - id: user
          type: string
          label: username
          multiline: false
        - id: password
          type: string
          label: password
          secret: true
          multiline: false
        - id: login_url
          type: string
          label: login url
          multiline: false
        - id: encryption_key
          type: string
          label: encryption key
          multiline: false
        - id: encryption_key_id
          type: string
          label: encryption key id
          multiline: false
        - id: api
          type: string
          label: base api
          multiline: false
        - id: account_name
          type: string
          label: account name
          multiline: false
        - id: account_uid
          type: string
          label: account uid
          secret: true
          multiline: false
    injectors:
      env:
        API: "{% raw -%}{{ api }}{% endraw -%}"
        USER: "{% raw -%}{{ user }}{% endraw -%}"
        PASSWORD: "{% raw -%}{{ password }}{% endraw -%}"
        LOGIN_URL: "{% raw -%}{{ login_url }}{% endraw -%}"
        ACCOUNT_UID: "{% raw -%}{{ account_uid }}{% endraw -%}"
        ACCOUNT_NAME: "{% raw -%}{{ account_name }}{% endraw -%}"
        ENCRYPTION_KEY: "{% raw -%}{{ encryption_key }}{% endraw -%}"
        ENCRYPTION_KEY_ID: "{% raw -%}{{ encryption_key_id }}{% endraw -%}"
    state: present
    validate_certs: false
  environment:
    TOWER_HOST: "{{ TOWER_HOST }}"
    TOWER_USERNAME: "{{ TOWER_USERNAME }}"
    TOWER_PASSWORD: "{{ TOWER_PASSWORD }}"

- name: Create Postgres Credential Type
  awx.awx.credential_type:
    name: Postgres
    description: Credential type for Postgres
    kind: cloud
    inputs: 
      fields:
        - id: host
          type: string
          label: host address
          multiline: false
        - id: user
          type: string
          label: username
          multiline: false
        - id: password
          type: string
          label: password
          secret: true
          multiline: false
        - id: database_name
          type: string
          label: database name
          multiline: false
        - id: table_name
          type: string
          label: table name
          multiline: false
    injectors:
      env:
        HOST: "{% raw -%}{{ host }}{% endraw -%}"
        PSQL_USER: "{% raw -%}{{ user }}{% endraw -%}"
        TABLE_NAME: "{% raw -%}{{ table_name }}{% endraw -%}"
        DATABASE_NAME: "{% raw -%}{{ database_name }}{% endraw -%}"
        PSQL_PASSWORD: "{% raw -%}{{ password }}{% endraw -%}"
    state: present
    validate_certs: false
  environment:
    TOWER_HOST: "{{ TOWER_HOST }}"
    TOWER_USERNAME: "{{ TOWER_USERNAME }}"
    TOWER_PASSWORD: "{{ TOWER_PASSWORD }}"

- name: Create Splunk HEC Credential Type
  awx.awx.credential_type:
    name: Splunk HEC
    description: Credential type for Splunk HEC
    kind: cloud
    inputs: 
      fields:
        - id: splunk_url
          type: string
          label: splunk url
          multiline: false
        - id: splunk_header
          type: string
          label: splunk auth header token
          secret: true
          multiline: false
    injectors:
      env:
        SPLUNK_URL:  "{% raw -%}{{ splunk_url }}{% endraw -%}"
        SPLUNKER_HEADER: "{% raw -%}{{ splunk_header }}{% endraw -%}"
    state: present
    validate_certs: false
  environment:
    TOWER_HOST: "{{ TOWER_HOST }}"
    TOWER_USERNAME: "{{ TOWER_USERNAME }}"
    TOWER_PASSWORD: "{{ TOWER_PASSWORD }}"
